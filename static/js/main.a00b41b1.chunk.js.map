{"version":3,"sources":["components/GlobalFilter/GlobalFilter.js","components/Table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalFilter","filter","setFilter","className","value","onChange","e","target","placeholder","Table","columns","data","useState","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps","toFixed","App","loadingData","setLoadingData","useMemo","Header","accessor","disableSorting","Cell","src","width","coin","a","current_price","id","price_change_percentage_24h","price_change_24h","setData","url","useEffect","axios","get","then","res","getData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a00b41b1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./GlobalFilter.css\";\r\n\r\nexport const GlobalFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <>\r\n      <span className=\"input__container\">\r\n        <input\r\n          className=\"input__search\"\r\n          value={filter || \"\"}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n          placeholder=\"Search...\"\r\n        />\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useTable, useFilters, useGlobalFilter, useSortBy } from \"react-table\";\r\nimport { GlobalFilter } from \"../../components/GlobalFilter/GlobalFilter\";\r\nimport \"./Table.css\";\r\n\r\nexport default function Table({ columns, data }) {\r\n  // Use the useTable Hook to send the columns and data to build the table\r\n\r\n  // Update the state when input changes\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n  const handleFilterChange = (e) => {\r\n    const value = e.target.value || undefined;\r\n    setFilterInput(value);\r\n  };\r\n\r\n  // Create a default prop getter\r\n  const defaultPropGetter = () => ({});\r\n\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    rows, // rows for the table based on the data passed\r\n    prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    setFilter,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters, // Adding the useFilters Hook to the table\r\n    // You can add as many Hooks as you want. Check the documentation for details. You can even add custom Hooks for react-table here\r\n    useGlobalFilter,\r\n    useSortBy\r\n  );\r\n  const { globalFilter } = state;\r\n  /* \r\n    Render the UI for your table\r\n    - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\r\n  */\r\n\r\n  return (\r\n    <>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <table {...getTableProps()} className=\"table__container\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className={\r\n                    column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \"sort-desc table__header\"\r\n                        : \"sort-asc table__header\"\r\n                      : \"table__header table__header\"\r\n                  }\r\n                >\r\n                  {column.render(\"Header\")}{\" \"}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()} className=\"table__row\">\r\n                      {typeof cell === \"number\"\r\n                        ? cell.render(\"Cell\").toFixed(2)\r\n                        : cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport Table from \"./components/Table/Table\";\nimport { FaBeer } from \"react-icons/fa\";\nimport Banner from \"./components/Banner/Banner\";\n\nfunction App() {\n  const [loadingData, setLoadingData] = useState(true);\n  const [color, setColor] = useState(\"red\");\n  const columns = useMemo(() => [\n    {\n      Header: \"Image\",\n      accessor: \"image\",\n      disableSorting: true,\n      Cell: ({ cell: { value } }) => <img src={value} width={30} />,\n    },\n    {\n      Header: \"Name\",\n      accessor: \"name\",\n    },\n    {\n      Header: \"Symbol\",\n      accessor: \"symbol\",\n      Cell: (coin) => <span className=\"coin__symbol\">{coin.value}</span>,\n    },\n    {\n      Header: \"Price\",\n      accessor: (a) => +a.current_price.toFixed(2) + \"zł\",\n    },\n    {\n      Header: \"Last 24h (%)\",\n      id: \"price_change_percentage_24h\",\n      Cell: (coin) => (\n        <span className={coin.value >= 0 ? \"green\" : \"red\"}>{coin.value}%</span>\n      ),\n      accessor: (coin) => coin.price_change_percentage_24h.toFixed(2),\n    },\n    {\n      Header: \"Last 24h (zł)\",\n      id: \"coin.price_change_24h\",\n      Cell: (coin) => (\n        <span className={coin.value >= 0 ? \"green\" : \"red\"}>\n          {coin.value}zł\n        </span>\n      ),\n      accessor: (coin) => coin.price_change_24h.toFixed(5),\n    },\n  ]);\n\n  const [data, setData] = useState([]);\n\n  const url =\n    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=pln&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=1h%2C%2024h%2C%207d\";\n\n  useEffect(() => {\n    async function getData() {\n      await axios.get(url).then((res) => {\n        setData(res.data);\n        setLoadingData(false);\n      });\n    }\n    if (loadingData) {\n      // if the result is not ready so you make the axios call\n      getData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <div className=\"background__container\">\n        <div className=\"background__wrapper\">\n          {/* here you check if the state is loading otherwise if you wioll not call that you will get a blank page because the data is an empty array at the moment of mounting */}\n          {loadingData ? (\n            <p>Loading Please wait...</p>\n          ) : (\n            <Table columns={columns} data={data} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}